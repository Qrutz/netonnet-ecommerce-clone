import HeaderLabel from '@/components/HeaderLabel';
import './globals.css';
import { Inter } from 'next/font/google';
import { client } from '@/sanity/lib/client';
import { getPromotionalBanner } from '@/sanity/helpers/queries';
import Link from 'next/link';

const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

async function getLabels() {
  const res = await client.fetch(getPromotionalBanner);

  return res;
}

interface labelType {
  message: string;
  type: string;
  link: string;
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const labels = await getLabels();

  return (
    <html lang='en'>
      <body>
        <div className='bg-gray-200 min-h-screen'>
          <div className=' bg-cyan-900  font-medium hidden sm:block'>
            <div className='mx-auto max-w-screen-xl px-4 '>
              {/* Label container */}
              <div className=' text-xs flex justify-between p-2'>
                {/* Label text */}
                <span className='flex gap-2 '>
                  <Link
                    className='text-gray-300 hover:underline'
                    href={'example.com'}
                  >
                    Hitta lagershop & öppetider
                  </Link>

                  <Link
                    className='text-gray-300 hover:underline'
                    href={'example.com'}
                  >
                    | Kundservice |
                  </Link>
                </span>
                <span className='flex gap-2'>
                  <Link
                    className=' font-bold text-white hover:underline'
                    href={'example.com'}
                  >
                    Privatperson
                  </Link>
                  <Link
                    className='text-gray-300 hover:underline'
                    href={'example.com'}
                  >
                    | Företag
                  </Link>
                </span>
              </div>
            </div>
          </div>

          {labels.map((label: labelType) => (
            <HeaderLabel key={label.message} {...label} />
          ))}
          {children}
        </div>
      </body>
    </html>
  );
}
